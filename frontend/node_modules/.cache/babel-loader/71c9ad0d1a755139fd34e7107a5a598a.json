{"ast":null,"code":"import _slicedToArray from \"/home/leandro/cursos/omnistack9/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/leandro/cursos/omnistack9/frontend/src/pages/New/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport api from '../../services/api';\nimport camera from \"../../assets/camera.svg\";\nimport './styles.css';\nexport default function New({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        empresa = _useState2[0],\n        setEmpresa = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        techs = _useState4[0],\n        setTechs = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        valor = _useState6[0],\n        setValor = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        imagem = _useState8[0],\n        setImagem = _useState8[1];\n\n  const preview = useMemo(() => {\n    return imagem ? URL.createObjectURL(imagem) : null;\n  }, [imagem]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData();\n    const userid = localStorage.getItem('user');\n    data.append('imagem', imagem);\n    data.append('empresa', empresa);\n    data.append('techs', techs);\n    data.append('valor', valor);\n    await api.post('/spots', data, {\n      headers: {\n        userid\n      }\n    });\n    history.push('/dashboard');\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"imagem\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \")\")\n    },\n    className: imagem ? 'tem-imagem' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => setImagem(event.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: camera,\n    alt: \"Selecionar imagem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"empresa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"EMPRESA *\"), React.createElement(\"input\", {\n    id: \"empresa\",\n    placeholder: \"Sua empresa incr\\xEDvel\",\n    value: empresa,\n    onChange: event => setEmpresa(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"techs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"TECNOLOGIAS * \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"(separadas por v\\xEDrgula)\")), React.createElement(\"input\", {\n    id: \"techs\",\n    placeholder: \"Quais tecnologias usam?\",\n    value: techs,\n    onChange: event => setTechs(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"valor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"VALOR DA DI\\xC1RIA * \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"(em branco para GRATUITO)\")), React.createElement(\"input\", {\n    id: \"valor\",\n    placeholder: \"Valor cobrado por dia\",\n    value: valor,\n    onChange: event => setValor(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"CADASTRAR\"));\n}","map":{"version":3,"sources":["/home/leandro/cursos/omnistack9/frontend/src/pages/New/index.js"],"names":["React","useState","useMemo","api","New","history","empresa","setEmpresa","techs","setTechs","valor","setValor","imagem","setImagem","preview","URL","createObjectURL","handleSubmit","e","preventDefault","data","FormData","userid","localStorage","getItem","append","post","headers","push","backgroundImage","event","target","files","camera","value"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport api from '../../services/api';\n\nimport camera from '../../assets/camera.svg';\n\nimport './styles.css';\n\nexport default function New({ history }) {\n    const [empresa, setEmpresa] = useState('');\n    const [techs, setTechs] = useState('');\n    const [valor, setValor] = useState('');\n    const [imagem, setImagem] = useState(null);\n\n    const preview = useMemo(() => {\n        return imagem ? URL.createObjectURL(imagem) : null;\n    }, [imagem])\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const data = new FormData();\n        const userid = localStorage.getItem('user');\n        \n        data.append('imagem', imagem);\n        data.append('empresa', empresa);\n        data.append('techs', techs);\n        data.append('valor', valor);\n\n        await api.post('/spots', data, {\n            headers: { userid }\n        })\n\n        history.push('/dashboard');\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label \n                id=\"imagem\" \n                style={{ backgroundImage: `url(${preview})` }}\n                className={imagem ? 'tem-imagem' : ''}\n            >\n                <input type=\"file\" onChange={event => setImagem(event.target.files[0])} />\n                <img src={camera} alt=\"Selecionar imagem\" />\n            </label>\n\n            <label htmlFor=\"empresa\">EMPRESA *</label>\n            <input id=\"empresa\" placeholder=\"Sua empresa incrível\" value={empresa} onChange={event => setEmpresa(event.target.value)} />\n\n            <label htmlFor=\"techs\">TECNOLOGIAS * <span>(separadas por vírgula)</span></label>\n            <input id=\"techs\" placeholder=\"Quais tecnologias usam?\" value={techs} onChange={event => setTechs(event.target.value)} />\n\n            <label htmlFor=\"valor\">VALOR DA DIÁRIA * <span>(em branco para GRATUITO)</span></label>\n            <input id=\"valor\" placeholder=\"Valor cobrado por dia\" value={valor} onChange={event => setValor(event.target.value)} />\n\n            <button type=\"submit\" className=\"btn\">CADASTRAR</button>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}