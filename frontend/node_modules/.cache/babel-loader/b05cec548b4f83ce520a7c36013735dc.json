{"ast":null,"code":"import _slicedToArray from \"/home/leandro/cursos/omnistack9/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/leandro/cursos/omnistack9/frontend/src/pages/Dashboard/index.js\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequests = _useState4[1];\n\n  const userid = localStorage.getItem('user');\n  const socket = useMemo(() => socketio('http://localhost:3333', {\n    query: {\n      userid\n    }\n  }), [userid]);\n  useEffect(() => {\n    socket.on('booking_request', data => {\n      setRequests([...requests, data]);\n    });\n  }, [requests]);\n  useEffect(() => {\n    async function loadSpots() {\n      const userid = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          userid\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, requests.map(request => React.createElement(\"li\", {\n    key: request._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, request.user.email), \" est\\xE1 solicitando uma reserva em \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, request.spot.empresa), \" para a data: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, request.date)), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"ACEITAR\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"REJEITAR\")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.imagem_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, spot.empresa), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, spot.valor ? \"R$\".concat(spot.valor, \"/dia\") : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Cadastrar novo spot\")));\n}","map":{"version":3,"sources":["/home/leandro/cursos/omnistack9/frontend/src/pages/Dashboard/index.js"],"names":["React","useEffect","useState","useMemo","Link","socketio","api","Dashboard","spots","setSpots","requests","setRequests","userid","localStorage","getItem","socket","query","on","data","loadSpots","response","get","headers","map","request","_id","user","email","spot","empresa","date","backgroundImage","imagem_url","valor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\n\nimport './styles.css';\n\nexport default function Dashboard() {\n    const [spots, setSpots] = useState([]);\n    const [requests, setRequests] = useState([]);\n\n    const userid = localStorage.getItem('user');\n    const socket = useMemo(() => socketio('http://localhost:3333', {\n        query: { userid }\n    }), [userid]);\n\n    useEffect(() => {\n        socket.on('booking_request', data => {\n            setRequests([ ...requests, data])\n        })\n    }, [requests]);\n\n    useEffect(() => {\n        async function loadSpots() {\n            const userid = localStorage.getItem('user');\n            const response = await api.get('/dashboard', {\n                headers: {userid}\n            });\n            \n            setSpots(response.data)\n        }\n\n        loadSpots();\n    }, []);\n\n    return (\n        <>\n            <ul className=\"notifications\">\n                {requests.map(request => (\n                    <li key={request._id}>\n                        <p>\n                            <strong>{request.user.email}</strong> est√° solicitando uma reserva em <strong>{request.spot.empresa}</strong> para a data: <strong>{request.date}</strong>\n                        </p>\n                        <button>ACEITAR</button>\n                        <button>REJEITAR</button>\n                    </li>\n                ))}\n            </ul>\n            <ul className=\"spot-list\">\n                {spots.map( spot => (\n                    <li key={spot._id}>\n                        <header style={{ backgroundImage: `url(${spot.imagem_url})` }} />\n                        <strong>{spot.empresa}</strong>\n                        <span>{spot.valor ? `R$${spot.valor}/dia` : 'GRATUITO'}</span>\n                    </li>\n                ))}\n            </ul>\n\n            <Link to=\"/new\" >\n                <button className=\"btn\">Cadastrar novo spot</button>\n            </Link>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}